//------------------------------------------------------------------------------
// <auto-generated>
//     Esse código foi gerado por uma ferramenta.
//
//     As alterações no arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.santsystem.com.br/", ConfigurationName="ServiceReference1.ErpWs")]
    public interface ErpWs
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.EnviaRecebeDadosResponse> EnviaRecebeDadosAsync(ServiceReference1.EnviaRecebeDados request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnviaRecebeDados
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EnviaRecebeDados", Namespace="http://ws.santsystem.com.br/", Order=0)]
        public ServiceReference1.EnviaRecebeDadosBody Body;
        
        public EnviaRecebeDados()
        {
        }
        
        public EnviaRecebeDados(ServiceReference1.EnviaRecebeDadosBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class EnviaRecebeDadosBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nr_licenca;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string id_empresa;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string nm_servico;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string xml;
        
        public EnviaRecebeDadosBody()
        {
        }
        
        public EnviaRecebeDadosBody(string nr_licenca, string id_empresa, string nm_servico, string xml)
        {
            this.nr_licenca = nr_licenca;
            this.id_empresa = id_empresa;
            this.nm_servico = nm_servico;
            this.xml = xml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnviaRecebeDadosResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EnviaRecebeDadosResponse", Namespace="http://ws.santsystem.com.br/", Order=0)]
        public ServiceReference1.EnviaRecebeDadosResponseBody Body;
        
        public EnviaRecebeDadosResponse()
        {
        }
        
        public EnviaRecebeDadosResponse(ServiceReference1.EnviaRecebeDadosResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class EnviaRecebeDadosResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        public EnviaRecebeDadosResponseBody()
        {
        }
        
        public EnviaRecebeDadosResponseBody(string @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface ErpWsChannel : ServiceReference1.ErpWs, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class ErpWsClient : System.ServiceModel.ClientBase<ServiceReference1.ErpWs>, ServiceReference1.ErpWs
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar o ponto de extremidade de serviço.
        /// </summary>
        /// <param name="serviceEndpoint">O ponto de extremidade a ser configurado</param>
        /// <param name="clientCredentials">As credenciais do cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ErpWsClient() : 
                base(ErpWsClient.GetDefaultBinding(), ErpWsClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ErpWsPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ErpWsClient(EndpointConfiguration endpointConfiguration) : 
                base(ErpWsClient.GetBindingForEndpoint(endpointConfiguration), ErpWsClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ErpWsClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ErpWsClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ErpWsClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ErpWsClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ErpWsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.EnviaRecebeDadosResponse> EnviaRecebeDadosAsync(ServiceReference1.EnviaRecebeDados request)
        {
            return base.Channel.EnviaRecebeDadosAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ErpWsPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ErpWsPort))
            {
                return new System.ServiceModel.EndpointAddress("http://192.168.3.44:8080/ERP_WEB/ErpWsService/ErpWs");
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ErpWsClient.GetBindingForEndpoint(EndpointConfiguration.ErpWsPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ErpWsClient.GetEndpointAddress(EndpointConfiguration.ErpWsPort);
        }
        
        public enum EndpointConfiguration
        {
            
            ErpWsPort,
        }
    }
}
